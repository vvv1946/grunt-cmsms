
@function grid-calc($colNumber,$totalColumns) {
	@return percentage(($colNumber / $totalColumns));
}

@mixin grid-row($behavior: false ) {

	@if $behavior == nest {
		width: auto;
		margin-#{$default-float}: -($column-gutter/2);
		margin-#{$opposite-direction}: -($column-gutter/2);
		margin-top: 0;
		margin-bottom: 0;
		max-width: none;
	}

	@else if $behavior == collapse {
		width: 100%;
		margin: 0;
		max-width: $row-width;
	}

	@else if $behavior == nest-collapse {
		width: auto;
		margin: 0;
		max-width: none;
	}

	@else {
		width: 100%;
		margin-#{$default-float}: auto;
		margin-#{$opposite-direction}: auto;
		margin-top: 0;
		margin-bottom: 0;
		max-width: $row-width;
	}
	@include clearfix();
}

@mixin grid-column(
	$columns:false, 
	$last-column:false, 
	$center:false, 
	$offset:false, 
	$push:false, 
	$pull:false, 
	$collapse:false,
	$float:true,
	$position:false) {
	
	@if $position {
		position: true	
	}
	
	@if $collapse {
		padding-left: 0;
		padding-right: 0;
	}

	@else if $collapse == false {
		padding-left: $column-gutter / 2;
		padding-right: $column-gutter / 2;
	}

	@if $columns {
		width: grid-calc($columns, $total-columns);

		@if $last-column { float: $opposite-direction;}
	}

	@if $push { #{$default-float}: grid-calc($push, $total-columns); #{$opposite-direction}: auto;}
	@if $pull { #{$opposite-direction}: grid-calc($pull, $total-columns); #{$default-float}: auto; }
	
	@if $float {
		@if $float == left or $float == true {float: $default-float;}
		@else if $float == right {float: $opposite-direction; }
		@else { float: none;}
	}

	@if $center {
		margin-#{$default-float}: auto;
		margin-#{$opposite-float}: auto;
		float: none !important;
	}

	@if $offset {margin-#{$default-float}: grid-calc($offset, $total-columns) !important;}

  }

@mixin grid-blocks($blocks:4,$margin:0.25%) {
	width: ((100% - (($blocks - 1) * $margin)) / $blocks);
	float: left;

	&:nth-child(n) {
		margin-bottom: $margin;
		margin-right: $margin;	
	}

	&:nth-child(#{$blocks}n) {
		margin-right: 0;
		margin-bottom: 0;
	}
}